// @generated by protoc-gen-es v2.6.1
// @generated from file user-con-req.proto (package userConnReq, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file user-con-req.proto.
 */
export declare const file_user_con_req: GenFile;

/**
 * @generated from message userConnReq.Empty
 */
export declare type Empty = Message<"userConnReq.Empty"> & {
};

/**
 * Describes the message userConnReq.Empty.
 * Use `create(EmptySchema)` to create a new message.
 */
export declare const EmptySchema: GenMessage<Empty>;

/**
 * @generated from message userConnReq.Connection
 */
export declare type Connection = Message<"userConnReq.Connection"> & {
  /**
   * @generated from field: string firstName = 1;
   */
  firstName: string;

  /**
   * @generated from field: string lastName = 2;
   */
  lastName: string;

  /**
   * @generated from field: string emailId = 3;
   */
  emailId: string;
};

/**
 * Describes the message userConnReq.Connection.
 * Use `create(ConnectionSchema)` to create a new message.
 */
export declare const ConnectionSchema: GenMessage<Connection>;

/**
 * @generated from message userConnReq.SendConection
 */
export declare type SendConection = Message<"userConnReq.SendConection"> & {
  /**
   * @generated from field: string emailId = 1;
   */
  emailId: string;

  /**
   * @generated from field: string status = 2;
   */
  status: string;
};

/**
 * Describes the message userConnReq.SendConection.
 * Use `create(SendConectionSchema)` to create a new message.
 */
export declare const SendConectionSchema: GenMessage<SendConection>;

/**
 * @generated from message userConnReq.SendStatusToUpdate
 */
export declare type SendStatusToUpdate = Message<"userConnReq.SendStatusToUpdate"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string status = 2;
   */
  status: string;
};

/**
 * Describes the message userConnReq.SendStatusToUpdate.
 * Use `create(SendStatusToUpdateSchema)` to create a new message.
 */
export declare const SendStatusToUpdateSchema: GenMessage<SendStatusToUpdate>;

/**
 * @generated from message userConnReq.ConnectionResponse
 */
export declare type ConnectionResponse = Message<"userConnReq.ConnectionResponse"> & {
  /**
   * @generated from field: string success = 1;
   */
  success: string;
};

/**
 * Describes the message userConnReq.ConnectionResponse.
 * Use `create(ConnectionResponseSchema)` to create a new message.
 */
export declare const ConnectionResponseSchema: GenMessage<ConnectionResponse>;

/**
 * @generated from message userConnReq.Connections
 */
export declare type Connections = Message<"userConnReq.Connections"> & {
  /**
   * @generated from field: repeated userConnReq.Connection conn = 1;
   */
  conn: Connection[];
};

/**
 * Describes the message userConnReq.Connections.
 * Use `create(ConnectionsSchema)` to create a new message.
 */
export declare const ConnectionsSchema: GenMessage<Connections>;

/**
 * @generated from service userConnReq.ConnService
 */
export declare const ConnService: GenService<{
  /**
   * @generated from rpc userConnReq.ConnService.SendRequest
   */
  sendRequest: {
    methodKind: "unary";
    input: typeof SendConectionSchema;
    output: typeof ConnectionResponseSchema;
  },
  /**
   * @generated from rpc userConnReq.ConnService.UpdateStatus
   */
  updateStatus: {
    methodKind: "unary";
    input: typeof SendStatusToUpdateSchema;
    output: typeof ConnectionResponseSchema;
  },
  /**
   * @generated from rpc userConnReq.ConnService.AcceptedConnections
   */
  acceptedConnections: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ConnectionsSchema;
  },
}>;

